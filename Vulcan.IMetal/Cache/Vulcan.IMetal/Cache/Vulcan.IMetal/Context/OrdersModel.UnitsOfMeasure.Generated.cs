//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 9/19/2017 10:27:27 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Vulcan.IMetal.Context.Orders
{

    /// <summary>
    /// There are no comments for Vulcan.IMetal.Context.Orders.UnitsOfMeasure in the schema.
    /// </summary>
    [Table(Name = @"public.units_of_measure")]
    public partial class UnitsOfMeasure : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private System.Nullable<int> _Version;

        private System.Nullable<System.DateTime> _Cdate;

        private System.Nullable<int> _CuserId;

        private System.Nullable<System.DateTime> _Mdate;

        private System.Nullable<int> _MuserId;

        private string _Status;

        private string _Code;

        private System.Nullable<int> _TypeId;

        private System.Nullable<decimal> _Scale;

        private System.Nullable<decimal> _Modifier;

        private string _Description;

        private string _ShortDescription;

        private int _ChargeQuantityDecimalPlace = 3;
        #pragma warning restore 0649

        private EntitySet<ProductControl> _ProductControl_Dim1ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim1UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim2ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim2UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim3ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim3UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim4ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim4UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim5ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim5UnitsId;

        private EntitySet<ProductControl> _ProductControl_PiecesUnitId;

        private EntitySet<ProductControl> _ProductControl_QuantityUnitId;

        private EntitySet<ProductControl> _ProductControl_WeightUnitId;

        private EntitySet<ProductCategory> _ProductCategory_BuyUnitId;

        private EntitySet<ProductCategory> _ProductCategory_BuyingQuantityUnitId;

        private EntitySet<ProductCategory> _ProductCategory_CostUnitId;

        private EntitySet<ProductCategory> _ProductCategory_PriceUnitId;

        private EntitySet<ProductCategory> _ProductCategory_SalesQuantityUnitId;

        private EntitySet<ProductSubGroup> _ProductSubGroup_MaxReorderUnitId;

        private EntitySet<ProductSubGroup> _ProductSubGroup_MaxStockUnitId;

        private EntitySet<ProductSubGroup> _ProductSubGroup_MinReorderUnitId;

        private EntitySet<ProductSubGroup> _ProductSubGroup_MinStockPeriodUnitId;

        private EntitySet<ProductSubGroup> _ProductSubGroup_MinStockUnitId;

        private EntitySet<SalesItem> _SalesItem_GroupCuttingCostUnitId;

        private EntitySet<SalesItem> _SalesItem_GroupDrillingCostUnitId;

        private EntitySet<SalesItem> _SalesItem_GroupPaintingCostUnitId;

        private EntitySet<SalesItem> _SalesItem_GroupPriceUnitId;

        private EntitySet<SalesItem> _SalesItem_GroupShotblastingCostUnitId;

        private EntitySet<SalesItem> _SalesItem_OriginalQuantityUnitId;

        private EntitySet<SalesItem> _SalesItem_WeightUnitsId;

        private EntitySet<SalesHeader> _SalesHeader_TransportChargeRateUnitId;

        private EntitySet<SalesHeader> _SalesHeader_TransportCostRateUnitId;

        private EntitySet<CostItem> _CostItem_CostQuantityUnitId;

        private EntitySet<CostItem> _CostItem_CostUnitId;

        private EntitySet<SalesCharge> _SalesCharge_ChargeQuantityUnitId;

        private EntitySet<SalesCharge> _SalesCharge_ChargeUnitId;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnVersionChanging(System.Nullable<int> value);
        partial void OnVersionChanged();
        partial void OnCdateChanging(System.Nullable<System.DateTime> value);
        partial void OnCdateChanged();
        partial void OnCuserIdChanging(System.Nullable<int> value);
        partial void OnCuserIdChanged();
        partial void OnMdateChanging(System.Nullable<System.DateTime> value);
        partial void OnMdateChanged();
        partial void OnMuserIdChanging(System.Nullable<int> value);
        partial void OnMuserIdChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnTypeIdChanging(System.Nullable<int> value);
        partial void OnTypeIdChanged();
        partial void OnScaleChanging(System.Nullable<decimal> value);
        partial void OnScaleChanged();
        partial void OnModifierChanging(System.Nullable<decimal> value);
        partial void OnModifierChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnShortDescriptionChanging(string value);
        partial void OnShortDescriptionChanged();
        partial void OnChargeQuantityDecimalPlaceChanging(int value);
        partial void OnChargeQuantityDecimalPlaceChanged();
        #endregion

        public UnitsOfMeasure()
        {
            this._ProductControl_Dim1ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim1ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim1ToleranceUnitsId));
            this._ProductControl_Dim1UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim1UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim1UnitsId));
            this._ProductControl_Dim2ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim2ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim2ToleranceUnitsId));
            this._ProductControl_Dim2UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim2UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim2UnitsId));
            this._ProductControl_Dim3ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim3ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim3ToleranceUnitsId));
            this._ProductControl_Dim3UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim3UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim3UnitsId));
            this._ProductControl_Dim4ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim4ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim4ToleranceUnitsId));
            this._ProductControl_Dim4UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim4UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim4UnitsId));
            this._ProductControl_Dim5ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim5ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim5ToleranceUnitsId));
            this._ProductControl_Dim5UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim5UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim5UnitsId));
            this._ProductControl_PiecesUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_PiecesUnitId), new Action<ProductControl>(this.detach_ProductControl_PiecesUnitId));
            this._ProductControl_QuantityUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_QuantityUnitId), new Action<ProductControl>(this.detach_ProductControl_QuantityUnitId));
            this._ProductControl_WeightUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_WeightUnitId), new Action<ProductControl>(this.detach_ProductControl_WeightUnitId));
            this._ProductCategory_BuyUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_BuyUnitId), new Action<ProductCategory>(this.detach_ProductCategory_BuyUnitId));
            this._ProductCategory_BuyingQuantityUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_BuyingQuantityUnitId), new Action<ProductCategory>(this.detach_ProductCategory_BuyingQuantityUnitId));
            this._ProductCategory_CostUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_CostUnitId), new Action<ProductCategory>(this.detach_ProductCategory_CostUnitId));
            this._ProductCategory_PriceUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_PriceUnitId), new Action<ProductCategory>(this.detach_ProductCategory_PriceUnitId));
            this._ProductCategory_SalesQuantityUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_SalesQuantityUnitId), new Action<ProductCategory>(this.detach_ProductCategory_SalesQuantityUnitId));
            this._ProductSubGroup_MaxReorderUnitId = new EntitySet<ProductSubGroup>(new Action<ProductSubGroup>(this.attach_ProductSubGroup_MaxReorderUnitId), new Action<ProductSubGroup>(this.detach_ProductSubGroup_MaxReorderUnitId));
            this._ProductSubGroup_MaxStockUnitId = new EntitySet<ProductSubGroup>(new Action<ProductSubGroup>(this.attach_ProductSubGroup_MaxStockUnitId), new Action<ProductSubGroup>(this.detach_ProductSubGroup_MaxStockUnitId));
            this._ProductSubGroup_MinReorderUnitId = new EntitySet<ProductSubGroup>(new Action<ProductSubGroup>(this.attach_ProductSubGroup_MinReorderUnitId), new Action<ProductSubGroup>(this.detach_ProductSubGroup_MinReorderUnitId));
            this._ProductSubGroup_MinStockPeriodUnitId = new EntitySet<ProductSubGroup>(new Action<ProductSubGroup>(this.attach_ProductSubGroup_MinStockPeriodUnitId), new Action<ProductSubGroup>(this.detach_ProductSubGroup_MinStockPeriodUnitId));
            this._ProductSubGroup_MinStockUnitId = new EntitySet<ProductSubGroup>(new Action<ProductSubGroup>(this.attach_ProductSubGroup_MinStockUnitId), new Action<ProductSubGroup>(this.detach_ProductSubGroup_MinStockUnitId));
            this._SalesItem_GroupCuttingCostUnitId = new EntitySet<SalesItem>(new Action<SalesItem>(this.attach_SalesItem_GroupCuttingCostUnitId), new Action<SalesItem>(this.detach_SalesItem_GroupCuttingCostUnitId));
            this._SalesItem_GroupDrillingCostUnitId = new EntitySet<SalesItem>(new Action<SalesItem>(this.attach_SalesItem_GroupDrillingCostUnitId), new Action<SalesItem>(this.detach_SalesItem_GroupDrillingCostUnitId));
            this._SalesItem_GroupPaintingCostUnitId = new EntitySet<SalesItem>(new Action<SalesItem>(this.attach_SalesItem_GroupPaintingCostUnitId), new Action<SalesItem>(this.detach_SalesItem_GroupPaintingCostUnitId));
            this._SalesItem_GroupPriceUnitId = new EntitySet<SalesItem>(new Action<SalesItem>(this.attach_SalesItem_GroupPriceUnitId), new Action<SalesItem>(this.detach_SalesItem_GroupPriceUnitId));
            this._SalesItem_GroupShotblastingCostUnitId = new EntitySet<SalesItem>(new Action<SalesItem>(this.attach_SalesItem_GroupShotblastingCostUnitId), new Action<SalesItem>(this.detach_SalesItem_GroupShotblastingCostUnitId));
            this._SalesItem_OriginalQuantityUnitId = new EntitySet<SalesItem>(new Action<SalesItem>(this.attach_SalesItem_OriginalQuantityUnitId), new Action<SalesItem>(this.detach_SalesItem_OriginalQuantityUnitId));
            this._SalesItem_WeightUnitsId = new EntitySet<SalesItem>(new Action<SalesItem>(this.attach_SalesItem_WeightUnitsId), new Action<SalesItem>(this.detach_SalesItem_WeightUnitsId));
            this._SalesHeader_TransportChargeRateUnitId = new EntitySet<SalesHeader>(new Action<SalesHeader>(this.attach_SalesHeader_TransportChargeRateUnitId), new Action<SalesHeader>(this.detach_SalesHeader_TransportChargeRateUnitId));
            this._SalesHeader_TransportCostRateUnitId = new EntitySet<SalesHeader>(new Action<SalesHeader>(this.attach_SalesHeader_TransportCostRateUnitId), new Action<SalesHeader>(this.detach_SalesHeader_TransportCostRateUnitId));
            this._CostItem_CostQuantityUnitId = new EntitySet<CostItem>(new Action<CostItem>(this.attach_CostItem_CostQuantityUnitId), new Action<CostItem>(this.detach_CostItem_CostQuantityUnitId));
            this._CostItem_CostUnitId = new EntitySet<CostItem>(new Action<CostItem>(this.attach_CostItem_CostUnitId), new Action<CostItem>(this.detach_CostItem_CostUnitId));
            this._SalesCharge_ChargeQuantityUnitId = new EntitySet<SalesCharge>(new Action<SalesCharge>(this.attach_SalesCharge_ChargeQuantityUnitId), new Action<SalesCharge>(this.detach_SalesCharge_ChargeQuantityUnitId));
            this._SalesCharge_ChargeUnitId = new EntitySet<SalesCharge>(new Action<SalesCharge>(this.attach_SalesCharge_ChargeUnitId), new Action<SalesCharge>(this.detach_SalesCharge_ChargeUnitId));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Version in the schema.
        /// </summary>
        [Column(Name = @"""version""", Storage = "_Version", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                if (this._Version != value)
                {
                    this.OnVersionChanging(value);
                    this.SendPropertyChanging("Version");
                    this._Version = value;
                    this.SendPropertyChanged("Version");
                    this.OnVersionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cdate in the schema.
        /// </summary>
        [Column(Name = @"cdate", Storage = "_Cdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Cdate
        {
            get
            {
                return this._Cdate;
            }
            set
            {
                if (this._Cdate != value)
                {
                    this.OnCdateChanging(value);
                    this.SendPropertyChanging("Cdate");
                    this._Cdate = value;
                    this.SendPropertyChanged("Cdate");
                    this.OnCdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CuserId in the schema.
        /// </summary>
        [Column(Name = @"cuser_id", Storage = "_CuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CuserId
        {
            get
            {
                return this._CuserId;
            }
            set
            {
                if (this._CuserId != value)
                {
                    this.OnCuserIdChanging(value);
                    this.SendPropertyChanging("CuserId");
                    this._CuserId = value;
                    this.SendPropertyChanged("CuserId");
                    this.OnCuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mdate in the schema.
        /// </summary>
        [Column(Name = @"mdate", Storage = "_Mdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Mdate
        {
            get
            {
                return this._Mdate;
            }
            set
            {
                if (this._Mdate != value)
                {
                    this.OnMdateChanging(value);
                    this.SendPropertyChanging("Mdate");
                    this._Mdate = value;
                    this.SendPropertyChanged("Mdate");
                    this.OnMdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MuserId in the schema.
        /// </summary>
        [Column(Name = @"muser_id", Storage = "_MuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> MuserId
        {
            get
            {
                return this._MuserId;
            }
            set
            {
                if (this._MuserId != value)
                {
                    this.OnMuserIdChanging(value);
                    this.SendPropertyChanging("MuserId");
                    this._MuserId = value;
                    this.SendPropertyChanged("MuserId");
                    this.OnMuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Name = @"status", Storage = "_Status", DbType = "CHAR(1)", UpdateCheck = UpdateCheck.Never)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Name = @"code", Storage = "_Code", DbType = "VARCHAR(3)", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this.OnCodeChanging(value);
                    this.SendPropertyChanging("Code");
                    this._Code = value;
                    this.SendPropertyChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TypeId in the schema.
        /// </summary>
        [Column(Name = @"type_id", Storage = "_TypeId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> TypeId
        {
            get
            {
                return this._TypeId;
            }
            set
            {
                if (this._TypeId != value)
                {
                    this.OnTypeIdChanging(value);
                    this.SendPropertyChanging("TypeId");
                    this._TypeId = value;
                    this.SendPropertyChanged("TypeId");
                    this.OnTypeIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Scale in the schema.
        /// </summary>
        [Column(Name = @"""scale""", Storage = "_Scale", DbType = "NUMERIC(20,8)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> Scale
        {
            get
            {
                return this._Scale;
            }
            set
            {
                if (this._Scale != value)
                {
                    this.OnScaleChanging(value);
                    this.SendPropertyChanging("Scale");
                    this._Scale = value;
                    this.SendPropertyChanged("Scale");
                    this.OnScaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Modifier in the schema.
        /// </summary>
        [Column(Name = @"modifier", Storage = "_Modifier", DbType = "NUMERIC(8,4)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> Modifier
        {
            get
            {
                return this._Modifier;
            }
            set
            {
                if (this._Modifier != value)
                {
                    this.OnModifierChanging(value);
                    this.SendPropertyChanging("Modifier");
                    this._Modifier = value;
                    this.SendPropertyChanged("Modifier");
                    this.OnModifierChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Name = @"description", Storage = "_Description", DbType = "VARCHAR(255)", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ShortDescription in the schema.
        /// </summary>
        [Column(Name = @"short_description", Storage = "_ShortDescription", DbType = "VARCHAR(6)", UpdateCheck = UpdateCheck.Never)]
        public string ShortDescription
        {
            get
            {
                return this._ShortDescription;
            }
            set
            {
                if (this._ShortDescription != value)
                {
                    this.OnShortDescriptionChanging(value);
                    this.SendPropertyChanging("ShortDescription");
                    this._ShortDescription = value;
                    this.SendPropertyChanged("ShortDescription");
                    this.OnShortDescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ChargeQuantityDecimalPlace in the schema.
        /// </summary>
        [Column(Name = @"charge_quantity_decimal_places", Storage = "_ChargeQuantityDecimalPlace", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ChargeQuantityDecimalPlace
        {
            get
            {
                return this._ChargeQuantityDecimalPlace;
            }
            set
            {
                if (this._ChargeQuantityDecimalPlace != value)
                {
                    this.OnChargeQuantityDecimalPlaceChanging(value);
                    this.SendPropertyChanging("ChargeQuantityDecimalPlace");
                    this._ChargeQuantityDecimalPlace = value;
                    this.SendPropertyChanged("ChargeQuantityDecimalPlace");
                    this.OnChargeQuantityDecimalPlaceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim1ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl", Storage="_ProductControl_Dim1ToleranceUnitsId", ThisKey="Id", OtherKey="Dim1ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim1ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim1ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim1ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim1UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl1", Storage="_ProductControl_Dim1UnitsId", ThisKey="Id", OtherKey="Dim1UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim1UnitsId
        {
            get
            {
                return this._ProductControl_Dim1UnitsId;
            }
            set
            {
                this._ProductControl_Dim1UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim2ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl2", Storage="_ProductControl_Dim2ToleranceUnitsId", ThisKey="Id", OtherKey="Dim2ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim2ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim2ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim2ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim2UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl3", Storage="_ProductControl_Dim2UnitsId", ThisKey="Id", OtherKey="Dim2UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim2UnitsId
        {
            get
            {
                return this._ProductControl_Dim2UnitsId;
            }
            set
            {
                this._ProductControl_Dim2UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim3ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl4", Storage="_ProductControl_Dim3ToleranceUnitsId", ThisKey="Id", OtherKey="Dim3ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim3ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim3ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim3ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim3UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl5", Storage="_ProductControl_Dim3UnitsId", ThisKey="Id", OtherKey="Dim3UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim3UnitsId
        {
            get
            {
                return this._ProductControl_Dim3UnitsId;
            }
            set
            {
                this._ProductControl_Dim3UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim4ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl6", Storage="_ProductControl_Dim4ToleranceUnitsId", ThisKey="Id", OtherKey="Dim4ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim4ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim4ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim4ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim4UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl7", Storage="_ProductControl_Dim4UnitsId", ThisKey="Id", OtherKey="Dim4UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim4UnitsId
        {
            get
            {
                return this._ProductControl_Dim4UnitsId;
            }
            set
            {
                this._ProductControl_Dim4UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim5ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl8", Storage="_ProductControl_Dim5ToleranceUnitsId", ThisKey="Id", OtherKey="Dim5ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim5ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim5ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim5ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim5UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl9", Storage="_ProductControl_Dim5UnitsId", ThisKey="Id", OtherKey="Dim5UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim5UnitsId
        {
            get
            {
                return this._ProductControl_Dim5UnitsId;
            }
            set
            {
                this._ProductControl_Dim5UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_PiecesUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl10", Storage="_ProductControl_PiecesUnitId", ThisKey="Id", OtherKey="PiecesUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_PiecesUnitId
        {
            get
            {
                return this._ProductControl_PiecesUnitId;
            }
            set
            {
                this._ProductControl_PiecesUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_QuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl11", Storage="_ProductControl_QuantityUnitId", ThisKey="Id", OtherKey="QuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_QuantityUnitId
        {
            get
            {
                return this._ProductControl_QuantityUnitId;
            }
            set
            {
                this._ProductControl_QuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_WeightUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl12", Storage="_ProductControl_WeightUnitId", ThisKey="Id", OtherKey="WeightUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_WeightUnitId
        {
            get
            {
                return this._ProductControl_WeightUnitId;
            }
            set
            {
                this._ProductControl_WeightUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_BuyUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory", Storage="_ProductCategory_BuyUnitId", ThisKey="Id", OtherKey="BuyUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_BuyUnitId
        {
            get
            {
                return this._ProductCategory_BuyUnitId;
            }
            set
            {
                this._ProductCategory_BuyUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_BuyingQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory1", Storage="_ProductCategory_BuyingQuantityUnitId", ThisKey="Id", OtherKey="BuyingQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_BuyingQuantityUnitId
        {
            get
            {
                return this._ProductCategory_BuyingQuantityUnitId;
            }
            set
            {
                this._ProductCategory_BuyingQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_CostUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory2", Storage="_ProductCategory_CostUnitId", ThisKey="Id", OtherKey="CostUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_CostUnitId
        {
            get
            {
                return this._ProductCategory_CostUnitId;
            }
            set
            {
                this._ProductCategory_CostUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_PriceUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory3", Storage="_ProductCategory_PriceUnitId", ThisKey="Id", OtherKey="PriceUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_PriceUnitId
        {
            get
            {
                return this._ProductCategory_PriceUnitId;
            }
            set
            {
                this._ProductCategory_PriceUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_SalesQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory4", Storage="_ProductCategory_SalesQuantityUnitId", ThisKey="Id", OtherKey="SalesQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_SalesQuantityUnitId
        {
            get
            {
                return this._ProductCategory_SalesQuantityUnitId;
            }
            set
            {
                this._ProductCategory_SalesQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductSubGroup_MaxReorderUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductSubGroup", Storage="_ProductSubGroup_MaxReorderUnitId", ThisKey="Id", OtherKey="MaxReorderUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductSubGroup> ProductSubGroup_MaxReorderUnitId
        {
            get
            {
                return this._ProductSubGroup_MaxReorderUnitId;
            }
            set
            {
                this._ProductSubGroup_MaxReorderUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductSubGroup_MaxStockUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductSubGroup1", Storage="_ProductSubGroup_MaxStockUnitId", ThisKey="Id", OtherKey="MaxStockUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductSubGroup> ProductSubGroup_MaxStockUnitId
        {
            get
            {
                return this._ProductSubGroup_MaxStockUnitId;
            }
            set
            {
                this._ProductSubGroup_MaxStockUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductSubGroup_MinReorderUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductSubGroup2", Storage="_ProductSubGroup_MinReorderUnitId", ThisKey="Id", OtherKey="MinReorderUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductSubGroup> ProductSubGroup_MinReorderUnitId
        {
            get
            {
                return this._ProductSubGroup_MinReorderUnitId;
            }
            set
            {
                this._ProductSubGroup_MinReorderUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductSubGroup_MinStockPeriodUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductSubGroup3", Storage="_ProductSubGroup_MinStockPeriodUnitId", ThisKey="Id", OtherKey="MinStockPeriodUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductSubGroup> ProductSubGroup_MinStockPeriodUnitId
        {
            get
            {
                return this._ProductSubGroup_MinStockPeriodUnitId;
            }
            set
            {
                this._ProductSubGroup_MinStockPeriodUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductSubGroup_MinStockUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductSubGroup4", Storage="_ProductSubGroup_MinStockUnitId", ThisKey="Id", OtherKey="MinStockUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductSubGroup> ProductSubGroup_MinStockUnitId
        {
            get
            {
                return this._ProductSubGroup_MinStockUnitId;
            }
            set
            {
                this._ProductSubGroup_MinStockUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesItem_GroupCuttingCostUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesItem", Storage="_SalesItem_GroupCuttingCostUnitId", ThisKey="Id", OtherKey="GroupCuttingCostUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesItem> SalesItem_GroupCuttingCostUnitId
        {
            get
            {
                return this._SalesItem_GroupCuttingCostUnitId;
            }
            set
            {
                this._SalesItem_GroupCuttingCostUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesItem_GroupDrillingCostUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesItem1", Storage="_SalesItem_GroupDrillingCostUnitId", ThisKey="Id", OtherKey="GroupDrillingCostUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesItem> SalesItem_GroupDrillingCostUnitId
        {
            get
            {
                return this._SalesItem_GroupDrillingCostUnitId;
            }
            set
            {
                this._SalesItem_GroupDrillingCostUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesItem_GroupPaintingCostUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesItem2", Storage="_SalesItem_GroupPaintingCostUnitId", ThisKey="Id", OtherKey="GroupPaintingCostUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesItem> SalesItem_GroupPaintingCostUnitId
        {
            get
            {
                return this._SalesItem_GroupPaintingCostUnitId;
            }
            set
            {
                this._SalesItem_GroupPaintingCostUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesItem_GroupPriceUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesItem3", Storage="_SalesItem_GroupPriceUnitId", ThisKey="Id", OtherKey="GroupPriceUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesItem> SalesItem_GroupPriceUnitId
        {
            get
            {
                return this._SalesItem_GroupPriceUnitId;
            }
            set
            {
                this._SalesItem_GroupPriceUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesItem_GroupShotblastingCostUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesItem4", Storage="_SalesItem_GroupShotblastingCostUnitId", ThisKey="Id", OtherKey="GroupShotblastingCostUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesItem> SalesItem_GroupShotblastingCostUnitId
        {
            get
            {
                return this._SalesItem_GroupShotblastingCostUnitId;
            }
            set
            {
                this._SalesItem_GroupShotblastingCostUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesItem_OriginalQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesItem5", Storage="_SalesItem_OriginalQuantityUnitId", ThisKey="Id", OtherKey="OriginalQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesItem> SalesItem_OriginalQuantityUnitId
        {
            get
            {
                return this._SalesItem_OriginalQuantityUnitId;
            }
            set
            {
                this._SalesItem_OriginalQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesItem_WeightUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesItem6", Storage="_SalesItem_WeightUnitsId", ThisKey="Id", OtherKey="WeightUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<SalesItem> SalesItem_WeightUnitsId
        {
            get
            {
                return this._SalesItem_WeightUnitsId;
            }
            set
            {
                this._SalesItem_WeightUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesHeader_TransportChargeRateUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesHeader", Storage="_SalesHeader_TransportChargeRateUnitId", ThisKey="Id", OtherKey="TransportChargeRateUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesHeader> SalesHeader_TransportChargeRateUnitId
        {
            get
            {
                return this._SalesHeader_TransportChargeRateUnitId;
            }
            set
            {
                this._SalesHeader_TransportChargeRateUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesHeader_TransportCostRateUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesHeader1", Storage="_SalesHeader_TransportCostRateUnitId", ThisKey="Id", OtherKey="TransportCostRateUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesHeader> SalesHeader_TransportCostRateUnitId
        {
            get
            {
                return this._SalesHeader_TransportCostRateUnitId;
            }
            set
            {
                this._SalesHeader_TransportCostRateUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for CostItem_CostQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_CostItem", Storage="_CostItem_CostQuantityUnitId", ThisKey="Id", OtherKey="CostQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<CostItem> CostItem_CostQuantityUnitId
        {
            get
            {
                return this._CostItem_CostQuantityUnitId;
            }
            set
            {
                this._CostItem_CostQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for CostItem_CostUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_CostItem1", Storage="_CostItem_CostUnitId", ThisKey="Id", OtherKey="CostUnitId", DeleteRule="NO ACTION")]
        public EntitySet<CostItem> CostItem_CostUnitId
        {
            get
            {
                return this._CostItem_CostUnitId;
            }
            set
            {
                this._CostItem_CostUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesCharge_ChargeQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesCharge", Storage="_SalesCharge_ChargeQuantityUnitId", ThisKey="Id", OtherKey="ChargeQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesCharge> SalesCharge_ChargeQuantityUnitId
        {
            get
            {
                return this._SalesCharge_ChargeQuantityUnitId;
            }
            set
            {
                this._SalesCharge_ChargeQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for SalesCharge_ChargeUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_SalesCharge1", Storage="_SalesCharge_ChargeUnitId", ThisKey="Id", OtherKey="ChargeUnitId", DeleteRule="NO ACTION")]
        public EntitySet<SalesCharge> SalesCharge_ChargeUnitId
        {
            get
            {
                return this._SalesCharge_ChargeUnitId;
            }
            set
            {
                this._SalesCharge_ChargeUnitId.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_ProductControl_Dim1ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim1ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim1ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim1ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim1UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1UnitsId");
            entity.UnitsOfMeasure_Dim1UnitsId = this;
        }
    
        private void detach_ProductControl_Dim1UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1UnitsId");
            entity.UnitsOfMeasure_Dim1UnitsId = null;
        }

        private void attach_ProductControl_Dim2ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim2ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim2ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim2ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim2UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2UnitsId");
            entity.UnitsOfMeasure_Dim2UnitsId = this;
        }
    
        private void detach_ProductControl_Dim2UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2UnitsId");
            entity.UnitsOfMeasure_Dim2UnitsId = null;
        }

        private void attach_ProductControl_Dim3ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim3ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim3ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim3ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim3UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3UnitsId");
            entity.UnitsOfMeasure_Dim3UnitsId = this;
        }
    
        private void detach_ProductControl_Dim3UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3UnitsId");
            entity.UnitsOfMeasure_Dim3UnitsId = null;
        }

        private void attach_ProductControl_Dim4ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim4ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim4ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim4ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim4UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4UnitsId");
            entity.UnitsOfMeasure_Dim4UnitsId = this;
        }
    
        private void detach_ProductControl_Dim4UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4UnitsId");
            entity.UnitsOfMeasure_Dim4UnitsId = null;
        }

        private void attach_ProductControl_Dim5ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim5ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim5ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim5ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim5UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5UnitsId");
            entity.UnitsOfMeasure_Dim5UnitsId = this;
        }
    
        private void detach_ProductControl_Dim5UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5UnitsId");
            entity.UnitsOfMeasure_Dim5UnitsId = null;
        }

        private void attach_ProductControl_PiecesUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_PiecesUnitId");
            entity.UnitsOfMeasure_PiecesUnitId = this;
        }
    
        private void detach_ProductControl_PiecesUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_PiecesUnitId");
            entity.UnitsOfMeasure_PiecesUnitId = null;
        }

        private void attach_ProductControl_QuantityUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_QuantityUnitId");
            entity.UnitsOfMeasure_QuantityUnitId = this;
        }
    
        private void detach_ProductControl_QuantityUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_QuantityUnitId");
            entity.UnitsOfMeasure_QuantityUnitId = null;
        }

        private void attach_ProductControl_WeightUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_WeightUnitId");
            entity.UnitsOfMeasure_WeightUnitId = this;
        }
    
        private void detach_ProductControl_WeightUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_WeightUnitId");
            entity.UnitsOfMeasure_WeightUnitId = null;
        }

        private void attach_ProductCategory_BuyUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyUnitId");
            entity.UnitsOfMeasure_BuyUnitId = this;
        }
    
        private void detach_ProductCategory_BuyUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyUnitId");
            entity.UnitsOfMeasure_BuyUnitId = null;
        }

        private void attach_ProductCategory_BuyingQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyingQuantityUnitId");
            entity.UnitsOfMeasure_BuyingQuantityUnitId = this;
        }
    
        private void detach_ProductCategory_BuyingQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyingQuantityUnitId");
            entity.UnitsOfMeasure_BuyingQuantityUnitId = null;
        }

        private void attach_ProductCategory_CostUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_CostUnitId");
            entity.UnitsOfMeasure_CostUnitId = this;
        }
    
        private void detach_ProductCategory_CostUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_CostUnitId");
            entity.UnitsOfMeasure_CostUnitId = null;
        }

        private void attach_ProductCategory_PriceUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_PriceUnitId");
            entity.UnitsOfMeasure_PriceUnitId = this;
        }
    
        private void detach_ProductCategory_PriceUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_PriceUnitId");
            entity.UnitsOfMeasure_PriceUnitId = null;
        }

        private void attach_ProductCategory_SalesQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_SalesQuantityUnitId");
            entity.UnitsOfMeasure_SalesQuantityUnitId = this;
        }
    
        private void detach_ProductCategory_SalesQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_SalesQuantityUnitId");
            entity.UnitsOfMeasure_SalesQuantityUnitId = null;
        }

        private void attach_ProductSubGroup_MaxReorderUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MaxReorderUnitId");
            entity.UnitsOfMeasure_MaxReorderUnitId = this;
        }
    
        private void detach_ProductSubGroup_MaxReorderUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MaxReorderUnitId");
            entity.UnitsOfMeasure_MaxReorderUnitId = null;
        }

        private void attach_ProductSubGroup_MaxStockUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MaxStockUnitId");
            entity.UnitsOfMeasure_MaxStockUnitId = this;
        }
    
        private void detach_ProductSubGroup_MaxStockUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MaxStockUnitId");
            entity.UnitsOfMeasure_MaxStockUnitId = null;
        }

        private void attach_ProductSubGroup_MinReorderUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MinReorderUnitId");
            entity.UnitsOfMeasure_MinReorderUnitId = this;
        }
    
        private void detach_ProductSubGroup_MinReorderUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MinReorderUnitId");
            entity.UnitsOfMeasure_MinReorderUnitId = null;
        }

        private void attach_ProductSubGroup_MinStockPeriodUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MinStockPeriodUnitId");
            entity.UnitsOfMeasure_MinStockPeriodUnitId = this;
        }
    
        private void detach_ProductSubGroup_MinStockPeriodUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MinStockPeriodUnitId");
            entity.UnitsOfMeasure_MinStockPeriodUnitId = null;
        }

        private void attach_ProductSubGroup_MinStockUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MinStockUnitId");
            entity.UnitsOfMeasure_MinStockUnitId = this;
        }
    
        private void detach_ProductSubGroup_MinStockUnitId(ProductSubGroup entity)
        {
            this.SendPropertyChanging("ProductSubGroup_MinStockUnitId");
            entity.UnitsOfMeasure_MinStockUnitId = null;
        }

        private void attach_SalesItem_GroupCuttingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupCuttingCostUnitId");
            entity.UnitsOfMeasure_GroupCuttingCostUnitId = this;
        }
    
        private void detach_SalesItem_GroupCuttingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupCuttingCostUnitId");
            entity.UnitsOfMeasure_GroupCuttingCostUnitId = null;
        }

        private void attach_SalesItem_GroupDrillingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupDrillingCostUnitId");
            entity.UnitsOfMeasure_GroupDrillingCostUnitId = this;
        }
    
        private void detach_SalesItem_GroupDrillingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupDrillingCostUnitId");
            entity.UnitsOfMeasure_GroupDrillingCostUnitId = null;
        }

        private void attach_SalesItem_GroupPaintingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupPaintingCostUnitId");
            entity.UnitsOfMeasure_GroupPaintingCostUnitId = this;
        }
    
        private void detach_SalesItem_GroupPaintingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupPaintingCostUnitId");
            entity.UnitsOfMeasure_GroupPaintingCostUnitId = null;
        }

        private void attach_SalesItem_GroupPriceUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupPriceUnitId");
            entity.UnitsOfMeasure_GroupPriceUnitId = this;
        }
    
        private void detach_SalesItem_GroupPriceUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupPriceUnitId");
            entity.UnitsOfMeasure_GroupPriceUnitId = null;
        }

        private void attach_SalesItem_GroupShotblastingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupShotblastingCostUnitId");
            entity.UnitsOfMeasure_GroupShotblastingCostUnitId = this;
        }
    
        private void detach_SalesItem_GroupShotblastingCostUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_GroupShotblastingCostUnitId");
            entity.UnitsOfMeasure_GroupShotblastingCostUnitId = null;
        }

        private void attach_SalesItem_OriginalQuantityUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_OriginalQuantityUnitId");
            entity.UnitsOfMeasure_OriginalQuantityUnitId = this;
        }
    
        private void detach_SalesItem_OriginalQuantityUnitId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_OriginalQuantityUnitId");
            entity.UnitsOfMeasure_OriginalQuantityUnitId = null;
        }

        private void attach_SalesItem_WeightUnitsId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_WeightUnitsId");
            entity.UnitsOfMeasure_WeightUnitsId = this;
        }
    
        private void detach_SalesItem_WeightUnitsId(SalesItem entity)
        {
            this.SendPropertyChanging("SalesItem_WeightUnitsId");
            entity.UnitsOfMeasure_WeightUnitsId = null;
        }

        private void attach_SalesHeader_TransportChargeRateUnitId(SalesHeader entity)
        {
            this.SendPropertyChanging("SalesHeader_TransportChargeRateUnitId");
            entity.UnitsOfMeasure_TransportChargeRateUnitId = this;
        }
    
        private void detach_SalesHeader_TransportChargeRateUnitId(SalesHeader entity)
        {
            this.SendPropertyChanging("SalesHeader_TransportChargeRateUnitId");
            entity.UnitsOfMeasure_TransportChargeRateUnitId = null;
        }

        private void attach_SalesHeader_TransportCostRateUnitId(SalesHeader entity)
        {
            this.SendPropertyChanging("SalesHeader_TransportCostRateUnitId");
            entity.UnitsOfMeasure_TransportCostRateUnitId = this;
        }
    
        private void detach_SalesHeader_TransportCostRateUnitId(SalesHeader entity)
        {
            this.SendPropertyChanging("SalesHeader_TransportCostRateUnitId");
            entity.UnitsOfMeasure_TransportCostRateUnitId = null;
        }

        private void attach_CostItem_CostQuantityUnitId(CostItem entity)
        {
            this.SendPropertyChanging("CostItem_CostQuantityUnitId");
            entity.UnitsOfMeasure_CostQuantityUnitId = this;
        }
    
        private void detach_CostItem_CostQuantityUnitId(CostItem entity)
        {
            this.SendPropertyChanging("CostItem_CostQuantityUnitId");
            entity.UnitsOfMeasure_CostQuantityUnitId = null;
        }

        private void attach_CostItem_CostUnitId(CostItem entity)
        {
            this.SendPropertyChanging("CostItem_CostUnitId");
            entity.UnitsOfMeasure_CostUnitId = this;
        }
    
        private void detach_CostItem_CostUnitId(CostItem entity)
        {
            this.SendPropertyChanging("CostItem_CostUnitId");
            entity.UnitsOfMeasure_CostUnitId = null;
        }

        private void attach_SalesCharge_ChargeQuantityUnitId(SalesCharge entity)
        {
            this.SendPropertyChanging("SalesCharge_ChargeQuantityUnitId");
            entity.UnitsOfMeasure_ChargeQuantityUnitId = this;
        }
    
        private void detach_SalesCharge_ChargeQuantityUnitId(SalesCharge entity)
        {
            this.SendPropertyChanging("SalesCharge_ChargeQuantityUnitId");
            entity.UnitsOfMeasure_ChargeQuantityUnitId = null;
        }

        private void attach_SalesCharge_ChargeUnitId(SalesCharge entity)
        {
            this.SendPropertyChanging("SalesCharge_ChargeUnitId");
            entity.UnitsOfMeasure_ChargeUnitId = this;
        }
    
        private void detach_SalesCharge_ChargeUnitId(SalesCharge entity)
        {
            this.SendPropertyChanging("SalesCharge_ChargeUnitId");
            entity.UnitsOfMeasure_ChargeUnitId = null;
        }
    }

}
