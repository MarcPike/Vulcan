//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 2/13/2018 9:26:28 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Vulcan.IMetal.Context.PurchaseOrders
{

    /// <summary>
    /// There are no comments for Vulcan.IMetal.Context.PurchaseOrders.UnitsOfMeasure in the schema.
    /// </summary>
    [Table(Name = @"public.units_of_measure")]
    public partial class UnitsOfMeasure : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private System.Nullable<int> _Version;

        private System.Nullable<System.DateTime> _Cdate;

        private System.Nullable<int> _CuserId;

        private System.Nullable<System.DateTime> _Mdate;

        private System.Nullable<int> _MuserId;

        private string _Status;

        private string _Code;

        private System.Nullable<int> _TypeId;

        private System.Nullable<decimal> _Scale;

        private System.Nullable<decimal> _Modifier;

        private string _Description;

        private string _ShortDescription;

        private int _ChargeQuantityDecimalPlace = 3;
        #pragma warning restore 0649

        private EntitySet<ProductControl> _ProductControl_Dim1ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim1UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim2ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim2UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim3ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim3UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim4ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim4UnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim5ToleranceUnitsId;

        private EntitySet<ProductControl> _ProductControl_Dim5UnitsId;

        private EntitySet<ProductControl> _ProductControl_PiecesUnitId;

        private EntitySet<ProductControl> _ProductControl_QuantityUnitId;

        private EntitySet<ProductControl> _ProductControl_WeightUnitId;

        private EntitySet<PartNumberSpecification> _PartNumberSpecification;

        private EntitySet<PurchaseOrderHeader> _PurchaseOrderHeader;

        private EntitySet<ProductCategory> _ProductCategory_BuyUnitId;

        private EntitySet<ProductCategory> _ProductCategory_BuyingQuantityUnitId;

        private EntitySet<ProductCategory> _ProductCategory_CostUnitId;

        private EntitySet<ProductCategory> _ProductCategory_PriceUnitId;

        private EntitySet<ProductCategory> _ProductCategory_SalesQuantityUnitId;

        private EntitySet<PurchaseOrderItem> _PurchaseOrderItem_OriginalQuantityUnitId;

        private EntitySet<PurchaseOrderItem> _PurchaseOrderItem_VisibleUnitId;

        private EntitySet<PurchaseOrderItem> _PurchaseOrderItem_WeightUnitsId;

        private EntitySet<ProductControl> _ProductControl_TotalLengthUnitId;

        private EntitySet<ProductControl> _ProductControl_TotalAreaUnitId;

        private EntitySet<ProductControl> _ProductControl_OutsideDiameterUnitId;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnVersionChanging(System.Nullable<int> value);
        partial void OnVersionChanged();
        partial void OnCdateChanging(System.Nullable<System.DateTime> value);
        partial void OnCdateChanged();
        partial void OnCuserIdChanging(System.Nullable<int> value);
        partial void OnCuserIdChanged();
        partial void OnMdateChanging(System.Nullable<System.DateTime> value);
        partial void OnMdateChanged();
        partial void OnMuserIdChanging(System.Nullable<int> value);
        partial void OnMuserIdChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnTypeIdChanging(System.Nullable<int> value);
        partial void OnTypeIdChanged();
        partial void OnScaleChanging(System.Nullable<decimal> value);
        partial void OnScaleChanged();
        partial void OnModifierChanging(System.Nullable<decimal> value);
        partial void OnModifierChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnShortDescriptionChanging(string value);
        partial void OnShortDescriptionChanged();
        partial void OnChargeQuantityDecimalPlaceChanging(int value);
        partial void OnChargeQuantityDecimalPlaceChanged();
        #endregion

        public UnitsOfMeasure()
        {
            this._ProductControl_Dim1ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim1ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim1ToleranceUnitsId));
            this._ProductControl_Dim1UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim1UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim1UnitsId));
            this._ProductControl_Dim2ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim2ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim2ToleranceUnitsId));
            this._ProductControl_Dim2UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim2UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim2UnitsId));
            this._ProductControl_Dim3ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim3ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim3ToleranceUnitsId));
            this._ProductControl_Dim3UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim3UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim3UnitsId));
            this._ProductControl_Dim4ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim4ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim4ToleranceUnitsId));
            this._ProductControl_Dim4UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim4UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim4UnitsId));
            this._ProductControl_Dim5ToleranceUnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim5ToleranceUnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim5ToleranceUnitsId));
            this._ProductControl_Dim5UnitsId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim5UnitsId), new Action<ProductControl>(this.detach_ProductControl_Dim5UnitsId));
            this._ProductControl_PiecesUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_PiecesUnitId), new Action<ProductControl>(this.detach_ProductControl_PiecesUnitId));
            this._ProductControl_QuantityUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_QuantityUnitId), new Action<ProductControl>(this.detach_ProductControl_QuantityUnitId));
            this._ProductControl_WeightUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_WeightUnitId), new Action<ProductControl>(this.detach_ProductControl_WeightUnitId));
            this._PartNumberSpecification = new EntitySet<PartNumberSpecification>(new Action<PartNumberSpecification>(this.attach_PartNumberSpecification), new Action<PartNumberSpecification>(this.detach_PartNumberSpecification));
            this._PurchaseOrderHeader = new EntitySet<PurchaseOrderHeader>(new Action<PurchaseOrderHeader>(this.attach_PurchaseOrderHeader), new Action<PurchaseOrderHeader>(this.detach_PurchaseOrderHeader));
            this._ProductCategory_BuyUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_BuyUnitId), new Action<ProductCategory>(this.detach_ProductCategory_BuyUnitId));
            this._ProductCategory_BuyingQuantityUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_BuyingQuantityUnitId), new Action<ProductCategory>(this.detach_ProductCategory_BuyingQuantityUnitId));
            this._ProductCategory_CostUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_CostUnitId), new Action<ProductCategory>(this.detach_ProductCategory_CostUnitId));
            this._ProductCategory_PriceUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_PriceUnitId), new Action<ProductCategory>(this.detach_ProductCategory_PriceUnitId));
            this._ProductCategory_SalesQuantityUnitId = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategory_SalesQuantityUnitId), new Action<ProductCategory>(this.detach_ProductCategory_SalesQuantityUnitId));
            this._PurchaseOrderItem_OriginalQuantityUnitId = new EntitySet<PurchaseOrderItem>(new Action<PurchaseOrderItem>(this.attach_PurchaseOrderItem_OriginalQuantityUnitId), new Action<PurchaseOrderItem>(this.detach_PurchaseOrderItem_OriginalQuantityUnitId));
            this._PurchaseOrderItem_VisibleUnitId = new EntitySet<PurchaseOrderItem>(new Action<PurchaseOrderItem>(this.attach_PurchaseOrderItem_VisibleUnitId), new Action<PurchaseOrderItem>(this.detach_PurchaseOrderItem_VisibleUnitId));
            this._PurchaseOrderItem_WeightUnitsId = new EntitySet<PurchaseOrderItem>(new Action<PurchaseOrderItem>(this.attach_PurchaseOrderItem_WeightUnitsId), new Action<PurchaseOrderItem>(this.detach_PurchaseOrderItem_WeightUnitsId));
            this._ProductControl_TotalLengthUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_TotalLengthUnitId), new Action<ProductControl>(this.detach_ProductControl_TotalLengthUnitId));
            this._ProductControl_TotalAreaUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_TotalAreaUnitId), new Action<ProductControl>(this.detach_ProductControl_TotalAreaUnitId));
            this._ProductControl_OutsideDiameterUnitId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_OutsideDiameterUnitId), new Action<ProductControl>(this.detach_ProductControl_OutsideDiameterUnitId));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Version in the schema.
        /// </summary>
        [Column(Name = @"""version""", Storage = "_Version", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                if (this._Version != value)
                {
                    this.OnVersionChanging(value);
                    this.SendPropertyChanging("Version");
                    this._Version = value;
                    this.SendPropertyChanged("Version");
                    this.OnVersionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cdate in the schema.
        /// </summary>
        [Column(Name = @"cdate", Storage = "_Cdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Cdate
        {
            get
            {
                return this._Cdate;
            }
            set
            {
                if (this._Cdate != value)
                {
                    this.OnCdateChanging(value);
                    this.SendPropertyChanging("Cdate");
                    this._Cdate = value;
                    this.SendPropertyChanged("Cdate");
                    this.OnCdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CuserId in the schema.
        /// </summary>
        [Column(Name = @"cuser_id", Storage = "_CuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CuserId
        {
            get
            {
                return this._CuserId;
            }
            set
            {
                if (this._CuserId != value)
                {
                    this.OnCuserIdChanging(value);
                    this.SendPropertyChanging("CuserId");
                    this._CuserId = value;
                    this.SendPropertyChanged("CuserId");
                    this.OnCuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mdate in the schema.
        /// </summary>
        [Column(Name = @"mdate", Storage = "_Mdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Mdate
        {
            get
            {
                return this._Mdate;
            }
            set
            {
                if (this._Mdate != value)
                {
                    this.OnMdateChanging(value);
                    this.SendPropertyChanging("Mdate");
                    this._Mdate = value;
                    this.SendPropertyChanged("Mdate");
                    this.OnMdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MuserId in the schema.
        /// </summary>
        [Column(Name = @"muser_id", Storage = "_MuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> MuserId
        {
            get
            {
                return this._MuserId;
            }
            set
            {
                if (this._MuserId != value)
                {
                    this.OnMuserIdChanging(value);
                    this.SendPropertyChanging("MuserId");
                    this._MuserId = value;
                    this.SendPropertyChanged("MuserId");
                    this.OnMuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Name = @"status", Storage = "_Status", DbType = "CHAR(1)", UpdateCheck = UpdateCheck.Never)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Code in the schema.
        /// </summary>
        [Column(Name = @"code", Storage = "_Code", DbType = "VARCHAR(3)", UpdateCheck = UpdateCheck.Never)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if (this._Code != value)
                {
                    this.OnCodeChanging(value);
                    this.SendPropertyChanging("Code");
                    this._Code = value;
                    this.SendPropertyChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TypeId in the schema.
        /// </summary>
        [Column(Name = @"type_id", Storage = "_TypeId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> TypeId
        {
            get
            {
                return this._TypeId;
            }
            set
            {
                if (this._TypeId != value)
                {
                    this.OnTypeIdChanging(value);
                    this.SendPropertyChanging("TypeId");
                    this._TypeId = value;
                    this.SendPropertyChanged("TypeId");
                    this.OnTypeIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Scale in the schema.
        /// </summary>
        [Column(Name = @"""scale""", Storage = "_Scale", DbType = "NUMERIC(20,8)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> Scale
        {
            get
            {
                return this._Scale;
            }
            set
            {
                if (this._Scale != value)
                {
                    this.OnScaleChanging(value);
                    this.SendPropertyChanging("Scale");
                    this._Scale = value;
                    this.SendPropertyChanged("Scale");
                    this.OnScaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Modifier in the schema.
        /// </summary>
        [Column(Name = @"modifier", Storage = "_Modifier", DbType = "NUMERIC(8,4)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> Modifier
        {
            get
            {
                return this._Modifier;
            }
            set
            {
                if (this._Modifier != value)
                {
                    this.OnModifierChanging(value);
                    this.SendPropertyChanging("Modifier");
                    this._Modifier = value;
                    this.SendPropertyChanged("Modifier");
                    this.OnModifierChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Name = @"description", Storage = "_Description", DbType = "VARCHAR(255)", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ShortDescription in the schema.
        /// </summary>
        [Column(Name = @"short_description", Storage = "_ShortDescription", DbType = "VARCHAR(6)", UpdateCheck = UpdateCheck.Never)]
        public string ShortDescription
        {
            get
            {
                return this._ShortDescription;
            }
            set
            {
                if (this._ShortDescription != value)
                {
                    this.OnShortDescriptionChanging(value);
                    this.SendPropertyChanging("ShortDescription");
                    this._ShortDescription = value;
                    this.SendPropertyChanged("ShortDescription");
                    this.OnShortDescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ChargeQuantityDecimalPlace in the schema.
        /// </summary>
        [Column(Name = @"charge_quantity_decimal_places", Storage = "_ChargeQuantityDecimalPlace", CanBeNull = false, DbType = "INT4 NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int ChargeQuantityDecimalPlace
        {
            get
            {
                return this._ChargeQuantityDecimalPlace;
            }
            set
            {
                if (this._ChargeQuantityDecimalPlace != value)
                {
                    this.OnChargeQuantityDecimalPlaceChanging(value);
                    this.SendPropertyChanging("ChargeQuantityDecimalPlace");
                    this._ChargeQuantityDecimalPlace = value;
                    this.SendPropertyChanged("ChargeQuantityDecimalPlace");
                    this.OnChargeQuantityDecimalPlaceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim1ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl", Storage="_ProductControl_Dim1ToleranceUnitsId", ThisKey="Id", OtherKey="Dim1ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim1ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim1ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim1ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim1UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl1", Storage="_ProductControl_Dim1UnitsId", ThisKey="Id", OtherKey="Dim1UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim1UnitsId
        {
            get
            {
                return this._ProductControl_Dim1UnitsId;
            }
            set
            {
                this._ProductControl_Dim1UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim2ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl2", Storage="_ProductControl_Dim2ToleranceUnitsId", ThisKey="Id", OtherKey="Dim2ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim2ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim2ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim2ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim2UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl3", Storage="_ProductControl_Dim2UnitsId", ThisKey="Id", OtherKey="Dim2UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim2UnitsId
        {
            get
            {
                return this._ProductControl_Dim2UnitsId;
            }
            set
            {
                this._ProductControl_Dim2UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim3ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl4", Storage="_ProductControl_Dim3ToleranceUnitsId", ThisKey="Id", OtherKey="Dim3ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim3ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim3ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim3ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim3UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl5", Storage="_ProductControl_Dim3UnitsId", ThisKey="Id", OtherKey="Dim3UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim3UnitsId
        {
            get
            {
                return this._ProductControl_Dim3UnitsId;
            }
            set
            {
                this._ProductControl_Dim3UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim4ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl6", Storage="_ProductControl_Dim4ToleranceUnitsId", ThisKey="Id", OtherKey="Dim4ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim4ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim4ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim4ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim4UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl7", Storage="_ProductControl_Dim4UnitsId", ThisKey="Id", OtherKey="Dim4UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim4UnitsId
        {
            get
            {
                return this._ProductControl_Dim4UnitsId;
            }
            set
            {
                this._ProductControl_Dim4UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim5ToleranceUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl8", Storage="_ProductControl_Dim5ToleranceUnitsId", ThisKey="Id", OtherKey="Dim5ToleranceUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim5ToleranceUnitsId
        {
            get
            {
                return this._ProductControl_Dim5ToleranceUnitsId;
            }
            set
            {
                this._ProductControl_Dim5ToleranceUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim5UnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl9", Storage="_ProductControl_Dim5UnitsId", ThisKey="Id", OtherKey="Dim5UnitsId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim5UnitsId
        {
            get
            {
                return this._ProductControl_Dim5UnitsId;
            }
            set
            {
                this._ProductControl_Dim5UnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_PiecesUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl10", Storage="_ProductControl_PiecesUnitId", ThisKey="Id", OtherKey="PiecesUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_PiecesUnitId
        {
            get
            {
                return this._ProductControl_PiecesUnitId;
            }
            set
            {
                this._ProductControl_PiecesUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_QuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl11", Storage="_ProductControl_QuantityUnitId", ThisKey="Id", OtherKey="QuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_QuantityUnitId
        {
            get
            {
                return this._ProductControl_QuantityUnitId;
            }
            set
            {
                this._ProductControl_QuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_WeightUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl12", Storage="_ProductControl_WeightUnitId", ThisKey="Id", OtherKey="WeightUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_WeightUnitId
        {
            get
            {
                return this._ProductControl_WeightUnitId;
            }
            set
            {
                this._ProductControl_WeightUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PartNumberSpecification in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_PartNumberSpecification", Storage="_PartNumberSpecification", ThisKey="Id", OtherKey="EntryQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<PartNumberSpecification> PartNumberSpecification
        {
            get
            {
                return this._PartNumberSpecification;
            }
            set
            {
                this._PartNumberSpecification.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PurchaseOrderHeader in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_PurchaseOrderHeader", Storage="_PurchaseOrderHeader", ThisKey="Id", OtherKey="CostRateUnitId", DeleteRule="NO ACTION")]
        public EntitySet<PurchaseOrderHeader> PurchaseOrderHeader
        {
            get
            {
                return this._PurchaseOrderHeader;
            }
            set
            {
                this._PurchaseOrderHeader.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_BuyUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory", Storage="_ProductCategory_BuyUnitId", ThisKey="Id", OtherKey="BuyUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_BuyUnitId
        {
            get
            {
                return this._ProductCategory_BuyUnitId;
            }
            set
            {
                this._ProductCategory_BuyUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_BuyingQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory1", Storage="_ProductCategory_BuyingQuantityUnitId", ThisKey="Id", OtherKey="BuyingQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_BuyingQuantityUnitId
        {
            get
            {
                return this._ProductCategory_BuyingQuantityUnitId;
            }
            set
            {
                this._ProductCategory_BuyingQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_CostUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory2", Storage="_ProductCategory_CostUnitId", ThisKey="Id", OtherKey="CostUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_CostUnitId
        {
            get
            {
                return this._ProductCategory_CostUnitId;
            }
            set
            {
                this._ProductCategory_CostUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_PriceUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory3", Storage="_ProductCategory_PriceUnitId", ThisKey="Id", OtherKey="PriceUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_PriceUnitId
        {
            get
            {
                return this._ProductCategory_PriceUnitId;
            }
            set
            {
                this._ProductCategory_PriceUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductCategory_SalesQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductCategory4", Storage="_ProductCategory_SalesQuantityUnitId", ThisKey="Id", OtherKey="SalesQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductCategory> ProductCategory_SalesQuantityUnitId
        {
            get
            {
                return this._ProductCategory_SalesQuantityUnitId;
            }
            set
            {
                this._ProductCategory_SalesQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PurchaseOrderItem_OriginalQuantityUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_PurchaseOrderItem", Storage="_PurchaseOrderItem_OriginalQuantityUnitId", ThisKey="Id", OtherKey="OriginalQuantityUnitId", DeleteRule="NO ACTION")]
        public EntitySet<PurchaseOrderItem> PurchaseOrderItem_OriginalQuantityUnitId
        {
            get
            {
                return this._PurchaseOrderItem_OriginalQuantityUnitId;
            }
            set
            {
                this._PurchaseOrderItem_OriginalQuantityUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PurchaseOrderItem_VisibleUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_PurchaseOrderItem1", Storage="_PurchaseOrderItem_VisibleUnitId", ThisKey="Id", OtherKey="VisibleUnitId", DeleteRule="NO ACTION")]
        public EntitySet<PurchaseOrderItem> PurchaseOrderItem_VisibleUnitId
        {
            get
            {
                return this._PurchaseOrderItem_VisibleUnitId;
            }
            set
            {
                this._PurchaseOrderItem_VisibleUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for PurchaseOrderItem_WeightUnitsId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_PurchaseOrderItem2", Storage="_PurchaseOrderItem_WeightUnitsId", ThisKey="Id", OtherKey="WeightUnitsId", DeleteRule="NO ACTION")]
        public EntitySet<PurchaseOrderItem> PurchaseOrderItem_WeightUnitsId
        {
            get
            {
                return this._PurchaseOrderItem_WeightUnitsId;
            }
            set
            {
                this._PurchaseOrderItem_WeightUnitsId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_TotalLengthUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl13", Storage="_ProductControl_TotalLengthUnitId", ThisKey="Id", OtherKey="TotalLengthUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_TotalLengthUnitId
        {
            get
            {
                return this._ProductControl_TotalLengthUnitId;
            }
            set
            {
                this._ProductControl_TotalLengthUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_TotalAreaUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl14", Storage="_ProductControl_TotalAreaUnitId", ThisKey="Id", OtherKey="TotalAreaUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_TotalAreaUnitId
        {
            get
            {
                return this._ProductControl_TotalAreaUnitId;
            }
            set
            {
                this._ProductControl_TotalAreaUnitId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_OutsideDiameterUnitId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="UnitsOfMeasure_ProductControl15", Storage="_ProductControl_OutsideDiameterUnitId", ThisKey="Id", OtherKey="OutsideDiameterUnitId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_OutsideDiameterUnitId
        {
            get
            {
                return this._ProductControl_OutsideDiameterUnitId;
            }
            set
            {
                this._ProductControl_OutsideDiameterUnitId.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_ProductControl_Dim1ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim1ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim1ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim1ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim1UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1UnitsId");
            entity.UnitsOfMeasure_Dim1UnitsId = this;
        }
    
        private void detach_ProductControl_Dim1UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1UnitsId");
            entity.UnitsOfMeasure_Dim1UnitsId = null;
        }

        private void attach_ProductControl_Dim2ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim2ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim2ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim2ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim2UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2UnitsId");
            entity.UnitsOfMeasure_Dim2UnitsId = this;
        }
    
        private void detach_ProductControl_Dim2UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2UnitsId");
            entity.UnitsOfMeasure_Dim2UnitsId = null;
        }

        private void attach_ProductControl_Dim3ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim3ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim3ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim3ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim3UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3UnitsId");
            entity.UnitsOfMeasure_Dim3UnitsId = this;
        }
    
        private void detach_ProductControl_Dim3UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3UnitsId");
            entity.UnitsOfMeasure_Dim3UnitsId = null;
        }

        private void attach_ProductControl_Dim4ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim4ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim4ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim4ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim4UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4UnitsId");
            entity.UnitsOfMeasure_Dim4UnitsId = this;
        }
    
        private void detach_ProductControl_Dim4UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4UnitsId");
            entity.UnitsOfMeasure_Dim4UnitsId = null;
        }

        private void attach_ProductControl_Dim5ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim5ToleranceUnitsId = this;
        }
    
        private void detach_ProductControl_Dim5ToleranceUnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5ToleranceUnitsId");
            entity.UnitsOfMeasure_Dim5ToleranceUnitsId = null;
        }

        private void attach_ProductControl_Dim5UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5UnitsId");
            entity.UnitsOfMeasure_Dim5UnitsId = this;
        }
    
        private void detach_ProductControl_Dim5UnitsId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5UnitsId");
            entity.UnitsOfMeasure_Dim5UnitsId = null;
        }

        private void attach_ProductControl_PiecesUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_PiecesUnitId");
            entity.UnitsOfMeasure_PiecesUnitId = this;
        }
    
        private void detach_ProductControl_PiecesUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_PiecesUnitId");
            entity.UnitsOfMeasure_PiecesUnitId = null;
        }

        private void attach_ProductControl_QuantityUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_QuantityUnitId");
            entity.UnitsOfMeasure_QuantityUnitId = this;
        }
    
        private void detach_ProductControl_QuantityUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_QuantityUnitId");
            entity.UnitsOfMeasure_QuantityUnitId = null;
        }

        private void attach_ProductControl_WeightUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_WeightUnitId");
            entity.UnitsOfMeasure_WeightUnitId = this;
        }
    
        private void detach_ProductControl_WeightUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_WeightUnitId");
            entity.UnitsOfMeasure_WeightUnitId = null;
        }

        private void attach_PartNumberSpecification(PartNumberSpecification entity)
        {
            this.SendPropertyChanging("PartNumberSpecification");
            entity.UnitsOfMeasure = this;
        }
    
        private void detach_PartNumberSpecification(PartNumberSpecification entity)
        {
            this.SendPropertyChanging("PartNumberSpecification");
            entity.UnitsOfMeasure = null;
        }

        private void attach_PurchaseOrderHeader(PurchaseOrderHeader entity)
        {
            this.SendPropertyChanging("PurchaseOrderHeader");
            entity.UnitsOfMeasure = this;
        }
    
        private void detach_PurchaseOrderHeader(PurchaseOrderHeader entity)
        {
            this.SendPropertyChanging("PurchaseOrderHeader");
            entity.UnitsOfMeasure = null;
        }

        private void attach_ProductCategory_BuyUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyUnitId");
            entity.UnitsOfMeasure_BuyUnitId = this;
        }
    
        private void detach_ProductCategory_BuyUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyUnitId");
            entity.UnitsOfMeasure_BuyUnitId = null;
        }

        private void attach_ProductCategory_BuyingQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyingQuantityUnitId");
            entity.UnitsOfMeasure_BuyingQuantityUnitId = this;
        }
    
        private void detach_ProductCategory_BuyingQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_BuyingQuantityUnitId");
            entity.UnitsOfMeasure_BuyingQuantityUnitId = null;
        }

        private void attach_ProductCategory_CostUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_CostUnitId");
            entity.UnitsOfMeasure_CostUnitId = this;
        }
    
        private void detach_ProductCategory_CostUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_CostUnitId");
            entity.UnitsOfMeasure_CostUnitId = null;
        }

        private void attach_ProductCategory_PriceUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_PriceUnitId");
            entity.UnitsOfMeasure_PriceUnitId = this;
        }
    
        private void detach_ProductCategory_PriceUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_PriceUnitId");
            entity.UnitsOfMeasure_PriceUnitId = null;
        }

        private void attach_ProductCategory_SalesQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_SalesQuantityUnitId");
            entity.UnitsOfMeasure_SalesQuantityUnitId = this;
        }
    
        private void detach_ProductCategory_SalesQuantityUnitId(ProductCategory entity)
        {
            this.SendPropertyChanging("ProductCategory_SalesQuantityUnitId");
            entity.UnitsOfMeasure_SalesQuantityUnitId = null;
        }

        private void attach_PurchaseOrderItem_OriginalQuantityUnitId(PurchaseOrderItem entity)
        {
            this.SendPropertyChanging("PurchaseOrderItem_OriginalQuantityUnitId");
            entity.UnitsOfMeasure_OriginalQuantityUnitId = this;
        }
    
        private void detach_PurchaseOrderItem_OriginalQuantityUnitId(PurchaseOrderItem entity)
        {
            this.SendPropertyChanging("PurchaseOrderItem_OriginalQuantityUnitId");
            entity.UnitsOfMeasure_OriginalQuantityUnitId = null;
        }

        private void attach_PurchaseOrderItem_VisibleUnitId(PurchaseOrderItem entity)
        {
            this.SendPropertyChanging("PurchaseOrderItem_VisibleUnitId");
            entity.UnitsOfMeasure_VisibleUnitId = this;
        }
    
        private void detach_PurchaseOrderItem_VisibleUnitId(PurchaseOrderItem entity)
        {
            this.SendPropertyChanging("PurchaseOrderItem_VisibleUnitId");
            entity.UnitsOfMeasure_VisibleUnitId = null;
        }

        private void attach_PurchaseOrderItem_WeightUnitsId(PurchaseOrderItem entity)
        {
            this.SendPropertyChanging("PurchaseOrderItem_WeightUnitsId");
            entity.UnitsOfMeasure_WeightUnitsId = this;
        }
    
        private void detach_PurchaseOrderItem_WeightUnitsId(PurchaseOrderItem entity)
        {
            this.SendPropertyChanging("PurchaseOrderItem_WeightUnitsId");
            entity.UnitsOfMeasure_WeightUnitsId = null;
        }

        private void attach_ProductControl_TotalLengthUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_TotalLengthUnitId");
            entity.UnitsOfMeasure_TotalLengthUnitId = this;
        }
    
        private void detach_ProductControl_TotalLengthUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_TotalLengthUnitId");
            entity.UnitsOfMeasure_TotalLengthUnitId = null;
        }

        private void attach_ProductControl_TotalAreaUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_TotalAreaUnitId");
            entity.UnitsOfMeasure_TotalAreaUnitId = this;
        }
    
        private void detach_ProductControl_TotalAreaUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_TotalAreaUnitId");
            entity.UnitsOfMeasure_TotalAreaUnitId = null;
        }

        private void attach_ProductControl_OutsideDiameterUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_OutsideDiameterUnitId");
            entity.UnitsOfMeasure_OutsideDiameterUnitId = this;
        }
    
        private void detach_ProductControl_OutsideDiameterUnitId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_OutsideDiameterUnitId");
            entity.UnitsOfMeasure_OutsideDiameterUnitId = null;
        }
    }

}
