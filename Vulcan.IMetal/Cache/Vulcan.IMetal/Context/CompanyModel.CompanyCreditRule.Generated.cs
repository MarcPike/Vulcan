//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 9/3/2020 10:11:09 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Vulcan.IMetal.Context.Company
{

    /// <summary>
    /// There are no comments for Vulcan.IMetal.Context.Company.CompanyCreditRule in the schema.
    /// </summary>
    [Table(Name = @"public.company_credit_rules")]
    public partial class CompanyCreditRule : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private int? _Version;

        private System.DateTime? _Cdate;

        private System.DateTime? _Mdate;

        private int? _CuserId;

        private int? _MuserId;

        private string _Status;

        private decimal? _CreditLimit;

        private System.DateTime? _CreditLimitDate;

        private System.DateTime? _CreditLimitExpiry;

        private decimal? _CreditLimitPercentage;

        private decimal? _OverduePercentageAllowed;

        private int? _OverdueDaysAllowed;

        private decimal? _InsuredLimit;

        private int? _InsuranceCompanyId;

        private int? _CreditLimitCheckOption = 1;
        #pragma warning restore 0649

        private EntityRef<Company> _Company_InsuranceCompanyId;

        private EntitySet<Company> _Company_CompanyCreditRulesId;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnVersionChanging(int? value);
        partial void OnVersionChanged();
        partial void OnCdateChanging(System.DateTime? value);
        partial void OnCdateChanged();
        partial void OnMdateChanging(System.DateTime? value);
        partial void OnMdateChanged();
        partial void OnCuserIdChanging(int? value);
        partial void OnCuserIdChanged();
        partial void OnMuserIdChanging(int? value);
        partial void OnMuserIdChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnCreditLimitChanging(decimal? value);
        partial void OnCreditLimitChanged();
        partial void OnCreditLimitDateChanging(System.DateTime? value);
        partial void OnCreditLimitDateChanged();
        partial void OnCreditLimitExpiryChanging(System.DateTime? value);
        partial void OnCreditLimitExpiryChanged();
        partial void OnCreditLimitPercentageChanging(decimal? value);
        partial void OnCreditLimitPercentageChanged();
        partial void OnOverduePercentageAllowedChanging(decimal? value);
        partial void OnOverduePercentageAllowedChanged();
        partial void OnOverdueDaysAllowedChanging(int? value);
        partial void OnOverdueDaysAllowedChanged();
        partial void OnInsuredLimitChanging(decimal? value);
        partial void OnInsuredLimitChanged();
        partial void OnInsuranceCompanyIdChanging(int? value);
        partial void OnInsuranceCompanyIdChanged();
        partial void OnCreditLimitCheckOptionChanging(int? value);
        partial void OnCreditLimitCheckOptionChanged();
        #endregion

        public CompanyCreditRule()
        {
            this._Company_InsuranceCompanyId  = default(EntityRef<Company>);
            this._Company_CompanyCreditRulesId = new EntitySet<Company>(new Action<Company>(this.attach_Company_CompanyCreditRulesId), new Action<Company>(this.detach_Company_CompanyCreditRulesId));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Version in the schema.
        /// </summary>
        [Column(Name = @"""version""", Storage = "_Version", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public int? Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                if (this._Version != value)
                {
                    this.OnVersionChanging(value);
                    this.SendPropertyChanging("Version");
                    this._Version = value;
                    this.SendPropertyChanged("Version");
                    this.OnVersionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cdate in the schema.
        /// </summary>
        [Column(Name = @"cdate", Storage = "_Cdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? Cdate
        {
            get
            {
                return this._Cdate;
            }
            set
            {
                if (this._Cdate != value)
                {
                    this.OnCdateChanging(value);
                    this.SendPropertyChanging("Cdate");
                    this._Cdate = value;
                    this.SendPropertyChanged("Cdate");
                    this.OnCdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mdate in the schema.
        /// </summary>
        [Column(Name = @"mdate", Storage = "_Mdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? Mdate
        {
            get
            {
                return this._Mdate;
            }
            set
            {
                if (this._Mdate != value)
                {
                    this.OnMdateChanging(value);
                    this.SendPropertyChanging("Mdate");
                    this._Mdate = value;
                    this.SendPropertyChanged("Mdate");
                    this.OnMdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CuserId in the schema.
        /// </summary>
        [Column(Name = @"cuser_id", Storage = "_CuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public int? CuserId
        {
            get
            {
                return this._CuserId;
            }
            set
            {
                if (this._CuserId != value)
                {
                    this.OnCuserIdChanging(value);
                    this.SendPropertyChanging("CuserId");
                    this._CuserId = value;
                    this.SendPropertyChanged("CuserId");
                    this.OnCuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MuserId in the schema.
        /// </summary>
        [Column(Name = @"muser_id", Storage = "_MuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public int? MuserId
        {
            get
            {
                return this._MuserId;
            }
            set
            {
                if (this._MuserId != value)
                {
                    this.OnMuserIdChanging(value);
                    this.SendPropertyChanging("MuserId");
                    this._MuserId = value;
                    this.SendPropertyChanged("MuserId");
                    this.OnMuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Name = @"status", Storage = "_Status", DbType = "CHAR(1)", UpdateCheck = UpdateCheck.Never)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CreditLimit in the schema.
        /// </summary>
        [Column(Name = @"credit_limit", Storage = "_CreditLimit", DbType = "NUMERIC(12,2)", UpdateCheck = UpdateCheck.Never)]
        public decimal? CreditLimit
        {
            get
            {
                return this._CreditLimit;
            }
            set
            {
                if (this._CreditLimit != value)
                {
                    this.OnCreditLimitChanging(value);
                    this.SendPropertyChanging("CreditLimit");
                    this._CreditLimit = value;
                    this.SendPropertyChanged("CreditLimit");
                    this.OnCreditLimitChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CreditLimitDate in the schema.
        /// </summary>
        [Column(Name = @"credit_limit_date", Storage = "_CreditLimitDate", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? CreditLimitDate
        {
            get
            {
                return this._CreditLimitDate;
            }
            set
            {
                if (this._CreditLimitDate != value)
                {
                    this.OnCreditLimitDateChanging(value);
                    this.SendPropertyChanging("CreditLimitDate");
                    this._CreditLimitDate = value;
                    this.SendPropertyChanged("CreditLimitDate");
                    this.OnCreditLimitDateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CreditLimitExpiry in the schema.
        /// </summary>
        [Column(Name = @"credit_limit_expiry", Storage = "_CreditLimitExpiry", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime? CreditLimitExpiry
        {
            get
            {
                return this._CreditLimitExpiry;
            }
            set
            {
                if (this._CreditLimitExpiry != value)
                {
                    this.OnCreditLimitExpiryChanging(value);
                    this.SendPropertyChanging("CreditLimitExpiry");
                    this._CreditLimitExpiry = value;
                    this.SendPropertyChanged("CreditLimitExpiry");
                    this.OnCreditLimitExpiryChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CreditLimitPercentage in the schema.
        /// </summary>
        [Column(Name = @"credit_limit_percentage", Storage = "_CreditLimitPercentage", DbType = "NUMERIC(5,2)", UpdateCheck = UpdateCheck.Never)]
        public decimal? CreditLimitPercentage
        {
            get
            {
                return this._CreditLimitPercentage;
            }
            set
            {
                if (this._CreditLimitPercentage != value)
                {
                    this.OnCreditLimitPercentageChanging(value);
                    this.SendPropertyChanging("CreditLimitPercentage");
                    this._CreditLimitPercentage = value;
                    this.SendPropertyChanged("CreditLimitPercentage");
                    this.OnCreditLimitPercentageChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OverduePercentageAllowed in the schema.
        /// </summary>
        [Column(Name = @"overdue_percentage_allowed", Storage = "_OverduePercentageAllowed", DbType = "NUMERIC(5,2)", UpdateCheck = UpdateCheck.Never)]
        public decimal? OverduePercentageAllowed
        {
            get
            {
                return this._OverduePercentageAllowed;
            }
            set
            {
                if (this._OverduePercentageAllowed != value)
                {
                    this.OnOverduePercentageAllowedChanging(value);
                    this.SendPropertyChanging("OverduePercentageAllowed");
                    this._OverduePercentageAllowed = value;
                    this.SendPropertyChanged("OverduePercentageAllowed");
                    this.OnOverduePercentageAllowedChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OverdueDaysAllowed in the schema.
        /// </summary>
        [Column(Name = @"overdue_days_allowed", Storage = "_OverdueDaysAllowed", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public int? OverdueDaysAllowed
        {
            get
            {
                return this._OverdueDaysAllowed;
            }
            set
            {
                if (this._OverdueDaysAllowed != value)
                {
                    this.OnOverdueDaysAllowedChanging(value);
                    this.SendPropertyChanging("OverdueDaysAllowed");
                    this._OverdueDaysAllowed = value;
                    this.SendPropertyChanged("OverdueDaysAllowed");
                    this.OnOverdueDaysAllowedChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for InsuredLimit in the schema.
        /// </summary>
        [Column(Name = @"insured_limit", Storage = "_InsuredLimit", DbType = "NUMERIC(12,2)", UpdateCheck = UpdateCheck.Never)]
        public decimal? InsuredLimit
        {
            get
            {
                return this._InsuredLimit;
            }
            set
            {
                if (this._InsuredLimit != value)
                {
                    this.OnInsuredLimitChanging(value);
                    this.SendPropertyChanging("InsuredLimit");
                    this._InsuredLimit = value;
                    this.SendPropertyChanged("InsuredLimit");
                    this.OnInsuredLimitChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for InsuranceCompanyId in the schema.
        /// </summary>
        [Column(Name = @"insurance_company_id", Storage = "_InsuranceCompanyId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public int? InsuranceCompanyId
        {
            get
            {
                return this._InsuranceCompanyId;
            }
            set
            {
                if (this._InsuranceCompanyId != value)
                {
                    if (this._Company_InsuranceCompanyId.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnInsuranceCompanyIdChanging(value);
                    this.SendPropertyChanging("InsuranceCompanyId");
                    this._InsuranceCompanyId = value;
                    this.SendPropertyChanged("InsuranceCompanyId");
                    this.OnInsuranceCompanyIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CreditLimitCheckOption in the schema.
        /// </summary>
        [Column(Name = @"credit_limit_check_option", Storage = "_CreditLimitCheckOption", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public int? CreditLimitCheckOption
        {
            get
            {
                return this._CreditLimitCheckOption;
            }
            set
            {
                if (this._CreditLimitCheckOption != value)
                {
                    this.OnCreditLimitCheckOptionChanging(value);
                    this.SendPropertyChanging("CreditLimitCheckOption");
                    this._CreditLimitCheckOption = value;
                    this.SendPropertyChanged("CreditLimitCheckOption");
                    this.OnCreditLimitCheckOptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Company_InsuranceCompanyId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Company_CompanyCreditRule", Storage="_Company_InsuranceCompanyId", ThisKey="InsuranceCompanyId", OtherKey="Id", IsForeignKey=true)]
        public Company Company_InsuranceCompanyId
        {
            get
            {
                return this._Company_InsuranceCompanyId.Entity;
            }
            set
            {
                Company previousValue = this._Company_InsuranceCompanyId.Entity;
                if ((previousValue != value) || (this._Company_InsuranceCompanyId.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Company_InsuranceCompanyId");
                    if (previousValue != null)
                    {
                        this._Company_InsuranceCompanyId.Entity = null;
                        previousValue.CompanyCreditRule_InsuranceCompanyId.Remove(this);
                    }
                    this._Company_InsuranceCompanyId.Entity = value;
                    if (value != null)
                    {
                        this._InsuranceCompanyId = value.Id;
                        value.CompanyCreditRule_InsuranceCompanyId.Add(this);
                    }
                    else
                    {
                        this._InsuranceCompanyId = default(int?);
                    }
                    this.SendPropertyChanged("Company_InsuranceCompanyId");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Company_CompanyCreditRulesId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CompanyCreditRule_Company", Storage="_Company_CompanyCreditRulesId", ThisKey="Id", OtherKey="CompanyCreditRulesId", DeleteRule="NO ACTION")]
        public EntitySet<Company> Company_CompanyCreditRulesId
        {
            get
            {
                return this._Company_CompanyCreditRulesId;
            }
            set
            {
                this._Company_CompanyCreditRulesId.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Company_CompanyCreditRulesId(Company entity)
        {
            this.SendPropertyChanging("Company_CompanyCreditRulesId");
            entity.CompanyCreditRule_CompanyCreditRulesId = this;
        }
    
        private void detach_Company_CompanyCreditRulesId(Company entity)
        {
            this.SendPropertyChanging("Company_CompanyCreditRulesId");
            entity.CompanyCreditRule_CompanyCreditRulesId = null;
        }
    }

}
