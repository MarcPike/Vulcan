//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 3/22/2018 7:34:54 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Vulcan.IMetal.Context.StockItems
{

    /// <summary>
    /// There are no comments for Vulcan.IMetal.Context.StockItems.StockDimensionType in the schema.
    /// </summary>
    [Table(Name = @"public.stock_dimension_types")]
    public partial class StockDimensionType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private System.Nullable<int> _Version;

        private System.Nullable<System.DateTime> _Cdate;

        private System.Nullable<int> _CuserId;

        private System.Nullable<System.DateTime> _Mdate;

        private System.Nullable<int> _MuserId;

        private string _Status;

        private string _Name;

        private string _Description;

        private string _ShortDescription;

        private System.Nullable<int> _Digit;

        private System.Nullable<int> _Place;

        private string _Type;
        #pragma warning restore 0649

        private EntitySet<ProductControl> _ProductControl_Dim1TypeId;

        private EntitySet<ProductControl> _ProductControl_Dim2TypeId;

        private EntitySet<ProductControl> _ProductControl_Dim3TypeId;

        private EntitySet<ProductControl> _ProductControl_Dim4TypeId;

        private EntitySet<ProductControl> _ProductControl_Dim5TypeId;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnVersionChanging(System.Nullable<int> value);
        partial void OnVersionChanged();
        partial void OnCdateChanging(System.Nullable<System.DateTime> value);
        partial void OnCdateChanged();
        partial void OnCuserIdChanging(System.Nullable<int> value);
        partial void OnCuserIdChanged();
        partial void OnMdateChanging(System.Nullable<System.DateTime> value);
        partial void OnMdateChanged();
        partial void OnMuserIdChanging(System.Nullable<int> value);
        partial void OnMuserIdChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnShortDescriptionChanging(string value);
        partial void OnShortDescriptionChanged();
        partial void OnDigitChanging(System.Nullable<int> value);
        partial void OnDigitChanged();
        partial void OnPlaceChanging(System.Nullable<int> value);
        partial void OnPlaceChanged();
        partial void OnTypeChanging(string value);
        partial void OnTypeChanged();
        #endregion

        public StockDimensionType()
        {
            this._ProductControl_Dim1TypeId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim1TypeId), new Action<ProductControl>(this.detach_ProductControl_Dim1TypeId));
            this._ProductControl_Dim2TypeId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim2TypeId), new Action<ProductControl>(this.detach_ProductControl_Dim2TypeId));
            this._ProductControl_Dim3TypeId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim3TypeId), new Action<ProductControl>(this.detach_ProductControl_Dim3TypeId));
            this._ProductControl_Dim4TypeId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim4TypeId), new Action<ProductControl>(this.detach_ProductControl_Dim4TypeId));
            this._ProductControl_Dim5TypeId = new EntitySet<ProductControl>(new Action<ProductControl>(this.attach_ProductControl_Dim5TypeId), new Action<ProductControl>(this.detach_ProductControl_Dim5TypeId));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SERIAL NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Version in the schema.
        /// </summary>
        [Column(Name = @"""version""", Storage = "_Version", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                if (this._Version != value)
                {
                    this.OnVersionChanging(value);
                    this.SendPropertyChanging("Version");
                    this._Version = value;
                    this.SendPropertyChanged("Version");
                    this.OnVersionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cdate in the schema.
        /// </summary>
        [Column(Name = @"cdate", Storage = "_Cdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Cdate
        {
            get
            {
                return this._Cdate;
            }
            set
            {
                if (this._Cdate != value)
                {
                    this.OnCdateChanging(value);
                    this.SendPropertyChanging("Cdate");
                    this._Cdate = value;
                    this.SendPropertyChanged("Cdate");
                    this.OnCdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CuserId in the schema.
        /// </summary>
        [Column(Name = @"cuser_id", Storage = "_CuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CuserId
        {
            get
            {
                return this._CuserId;
            }
            set
            {
                if (this._CuserId != value)
                {
                    this.OnCuserIdChanging(value);
                    this.SendPropertyChanging("CuserId");
                    this._CuserId = value;
                    this.SendPropertyChanged("CuserId");
                    this.OnCuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mdate in the schema.
        /// </summary>
        [Column(Name = @"mdate", Storage = "_Mdate", DbType = "TIMESTAMPTZ", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Mdate
        {
            get
            {
                return this._Mdate;
            }
            set
            {
                if (this._Mdate != value)
                {
                    this.OnMdateChanging(value);
                    this.SendPropertyChanging("Mdate");
                    this._Mdate = value;
                    this.SendPropertyChanged("Mdate");
                    this.OnMdateChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MuserId in the schema.
        /// </summary>
        [Column(Name = @"muser_id", Storage = "_MuserId", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> MuserId
        {
            get
            {
                return this._MuserId;
            }
            set
            {
                if (this._MuserId != value)
                {
                    this.OnMuserIdChanging(value);
                    this.SendPropertyChanging("MuserId");
                    this._MuserId = value;
                    this.SendPropertyChanged("MuserId");
                    this.OnMuserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Status in the schema.
        /// </summary>
        [Column(Name = @"status", Storage = "_Status", DbType = "CHAR(1)", UpdateCheck = UpdateCheck.Never)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if (this._Status != value)
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [Column(Name = @"""name""", Storage = "_Name", DbType = "VARCHAR(12)", UpdateCheck = UpdateCheck.Never)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [Column(Name = @"description", Storage = "_Description", DbType = "VARCHAR(255)", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ShortDescription in the schema.
        /// </summary>
        [Column(Name = @"short_description", Storage = "_ShortDescription", DbType = "VARCHAR(3)", UpdateCheck = UpdateCheck.Never)]
        public string ShortDescription
        {
            get
            {
                return this._ShortDescription;
            }
            set
            {
                if (this._ShortDescription != value)
                {
                    this.OnShortDescriptionChanging(value);
                    this.SendPropertyChanging("ShortDescription");
                    this._ShortDescription = value;
                    this.SendPropertyChanged("ShortDescription");
                    this.OnShortDescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Digit in the schema.
        /// </summary>
        [Column(Name = @"digits", Storage = "_Digit", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Digit
        {
            get
            {
                return this._Digit;
            }
            set
            {
                if (this._Digit != value)
                {
                    this.OnDigitChanging(value);
                    this.SendPropertyChanging("Digit");
                    this._Digit = value;
                    this.SendPropertyChanged("Digit");
                    this.OnDigitChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Place in the schema.
        /// </summary>
        [Column(Name = @"places", Storage = "_Place", DbType = "INT4", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Place
        {
            get
            {
                return this._Place;
            }
            set
            {
                if (this._Place != value)
                {
                    this.OnPlaceChanging(value);
                    this.SendPropertyChanging("Place");
                    this._Place = value;
                    this.SendPropertyChanged("Place");
                    this.OnPlaceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Type in the schema.
        /// </summary>
        [Column(Name = @"""type""", Storage = "_Type", DbType = "CHAR(1)", UpdateCheck = UpdateCheck.Never)]
        public string Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if (this._Type != value)
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging("Type");
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim1TypeId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="StockDimensionType_ProductControl", Storage="_ProductControl_Dim1TypeId", ThisKey="Id", OtherKey="Dim1TypeId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim1TypeId
        {
            get
            {
                return this._ProductControl_Dim1TypeId;
            }
            set
            {
                this._ProductControl_Dim1TypeId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim2TypeId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="StockDimensionType_ProductControl1", Storage="_ProductControl_Dim2TypeId", ThisKey="Id", OtherKey="Dim2TypeId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim2TypeId
        {
            get
            {
                return this._ProductControl_Dim2TypeId;
            }
            set
            {
                this._ProductControl_Dim2TypeId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim3TypeId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="StockDimensionType_ProductControl2", Storage="_ProductControl_Dim3TypeId", ThisKey="Id", OtherKey="Dim3TypeId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim3TypeId
        {
            get
            {
                return this._ProductControl_Dim3TypeId;
            }
            set
            {
                this._ProductControl_Dim3TypeId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim4TypeId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="StockDimensionType_ProductControl3", Storage="_ProductControl_Dim4TypeId", ThisKey="Id", OtherKey="Dim4TypeId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim4TypeId
        {
            get
            {
                return this._ProductControl_Dim4TypeId;
            }
            set
            {
                this._ProductControl_Dim4TypeId.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for ProductControl_Dim5TypeId in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="StockDimensionType_ProductControl4", Storage="_ProductControl_Dim5TypeId", ThisKey="Id", OtherKey="Dim5TypeId", DeleteRule="NO ACTION")]
        public EntitySet<ProductControl> ProductControl_Dim5TypeId
        {
            get
            {
                return this._ProductControl_Dim5TypeId;
            }
            set
            {
                this._ProductControl_Dim5TypeId.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_ProductControl_Dim1TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1TypeId");
            entity.StockDimensionType_Dim1TypeId = this;
        }
    
        private void detach_ProductControl_Dim1TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim1TypeId");
            entity.StockDimensionType_Dim1TypeId = null;
        }

        private void attach_ProductControl_Dim2TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2TypeId");
            entity.StockDimensionType_Dim2TypeId = this;
        }
    
        private void detach_ProductControl_Dim2TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim2TypeId");
            entity.StockDimensionType_Dim2TypeId = null;
        }

        private void attach_ProductControl_Dim3TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3TypeId");
            entity.StockDimensionType_Dim3TypeId = this;
        }
    
        private void detach_ProductControl_Dim3TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim3TypeId");
            entity.StockDimensionType_Dim3TypeId = null;
        }

        private void attach_ProductControl_Dim4TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4TypeId");
            entity.StockDimensionType_Dim4TypeId = this;
        }
    
        private void detach_ProductControl_Dim4TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim4TypeId");
            entity.StockDimensionType_Dim4TypeId = null;
        }

        private void attach_ProductControl_Dim5TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5TypeId");
            entity.StockDimensionType_Dim5TypeId = this;
        }
    
        private void detach_ProductControl_Dim5TypeId(ProductControl entity)
        {
            this.SendPropertyChanging("ProductControl_Dim5TypeId");
            entity.StockDimensionType_Dim5TypeId = null;
        }
    }

}
